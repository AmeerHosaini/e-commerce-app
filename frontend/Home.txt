--------------------------- This is the Orignial component before adding filtering to it -------------

import { Col, Row } from "react-bootstrap";
import { useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { listProducts } from "../actions/productAction";
import { useParams, Link } from "react-router-dom";
import Meta from "../components/Meta";
import Product from "../components/Product";
import Message from "../components/Message";
import Loader from "../components/Loader";
import Paginate from "../components/paginate";
import ProductCarousel from "../components/ProductCarousel";

const Home = () => {
  /* const [products, setProducts] = useState([]);

  // With this syntax we get a 404 error, because axios is looking at localhost:3000/api/products
  // If we had specified the localhost route, we would have gotten across domain error
  // We must set up proxy to look for localhost:5000 in the package.json
  // http:127.0.0.1 is the loopback (localhost)
  // const getProducts = async () => {
  //   const { data } = await axios.get("/api/products");
  //   setProducts(data);
  // };

  // useEffect(() => {
  //   // const getProducts = async () => {
  //   //   const { data } = await axios.get("/api/products");
  //   //   setProducts(data);
  //   // }
  //   getProducts();
  // }, []);
  */

  // We are gonna make the get request through our action -- useSelector(uses a part of a state)
  const dispatch = useDispatch();
  const { keyword } = useParams();

  // There is always one page if pageNumber not specified
  const { pageNumber } = useParams() || 1;

  const productList = useSelector((state) => state.productList);
  const { loading, error, products, pages, page } = productList;

  useEffect(() => {
    dispatch(listProducts(keyword, pageNumber));
  }, [dispatch, keyword, pageNumber]);

  return (
    <>
      <Meta />
      {!keyword ? (
        <ProductCarousel />
      ) : (
        <Link to="/" className={`btn btn-dark`}>
          Go Back
        </Link>
      )}
      <h1 className={`mt-3`}>Latest Products</h1>
      {loading ? (
        <Loader />
      ) : error ? (
        <Message variant="danger">{error}</Message>
      ) : (
        <>
          <Row>
            {products.map((product) => (
              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>
                <Product product={product} />
              </Col>
            ))}
          </Row>
          <Paginate
            pages={pages}
            page={page}
            keyword={keyword ? keyword : ""}
          />
        </>
      )}
    </>
  );
};

export default Home;

----------------------------------list product action--------------------
export const listProducts =
  (keyword = "", pageNumber = "") =>
  async (dispatch) => {
    try {
      dispatch({ type: PRODUCT_LIST_REQUEST });

      // if you have more than one query string, the first one would be ? and the rest would be &
      const { data } = await axios.get(
        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`
      );

      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });
    } catch (error) {
      dispatch({
        type: PRODUCT_LIST_FAIL,
        payload:
          error.response && error.response.data.message
            ? error.response.data.message
            : error.message,
      });
    }
  };